/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import arduino.*;
import com.fazecast.jSerialComm.SerialPort;
import connection.ConnectionFactory;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.table.DefaultTableModel;
import model.bean.DadosKafer;
import model.dao.DadosDAO;


/**
 *
 * @author Mathias
 */
public class TelaKafer extends javax.swing.JFrame {

    public static Arduino kafer;
    /**
     * Creates new form TelaKafer
     */
    
    public SerialPort porta;
    public static String tabela;
    public static DadosKafer dados = new DadosKafer();
    
    public TelaKafer() {
        initComponents();
        //carregarPortas();
        lblConnect.setVisible(false);
        
        
        
    }
    
    public  Runnable t1 = new Runnable(){
        public void run(){
            while(true){
                //System.out.println(kafer.serialRead(2));
              
                String leitura = kafer.serialRead();
              
                char[] leitura2 = leitura.toCharArray();
                int cont = 0;
                int k = 0;
                for(int i = 0; i < leitura.length(); i++){
                    if(leitura2[i] == '\n'){
                       if(cont == 0) {
                           dados.setErro(leitura.subSequence(k, i).toString());
                           System.out.println("erro " + dados.getErro());
                          
                       }
                       if(cont == 1) {
                           dados.setKd(leitura.subSequence(k, i).toString());
                           System.out.println("Kd " + dados.getKd());
                       }
                       if(cont == 2) {
                           dados.setKi(leitura.subSequence(k, i).toString());
                           System.out.println("Ki " + dados.getKi());
                       }
                       if(cont == 3) {
                           dados.setKp(leitura.subSequence(k, i).toString());
                           System.out.println("Kp " + dados.getKp());
                       }
                       if(cont == 4) {
                           dados.setMillis(leitura.subSequence(k, i).toString());
                           System.out.println("millis " + dados.getMillis());
                       }
                       cont++;
                       if(cont == 5) {
                           cont = 0;
                           DadosDAO dbDados = new DadosDAO();
                           dbDados.create(dados); 
                           
                           readJTable();
                       }
                       k = i+1;    
                    }
                }
                
            }
            
        }
    };
    
    //DefaultTableModel modelo = (DefaultTableModel) jtDados.getModel();
    //modelo = (DefaultTableModel) jtDados.getModel();
    
    public void readJTable(){
        
        DefaultTableModel modelo = (DefaultTableModel) jtDados.getModel();
        modelo.setRowCount(0);
        DadosDAO ddao = new DadosDAO();
        for(DadosKafer k: ddao.ler()){
            System.out.println(k.getErro());
            modelo.addRow(new Object[]{
                k.getMillis(),
                k.getErro(),
                k.getKp(),
                k.getKi(),
                k.getKd()
                
            });
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbPort = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnConnect = new javax.swing.JButton();
        lblConnect = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbController = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDados = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        cbPort.setFont(new java.awt.Font("Cordia New", 0, 24)); // NOI18N
        cbPort.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbPortMouseClicked(evt);
            }
        });
        cbPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPortActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cordia New", 0, 24)); // NOI18N
        jLabel1.setText("Porta");

        btnConnect.setFont(new java.awt.Font("Cordia New", 0, 24)); // NOI18N
        btnConnect.setText("Conectar");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        lblConnect.setFont(new java.awt.Font("Cordia New", 0, 24)); // NOI18N
        lblConnect.setForeground(new java.awt.Color(0, 153, 51));
        lblConnect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConnect.setText("Aquisitando Dados!");

        jLabel2.setFont(new java.awt.Font("Cordia New", 0, 24)); // NOI18N
        jLabel2.setText("Controlador");

        cbController.setFont(new java.awt.Font("Cordia New", 0, 24)); // NOI18N
        cbController.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PID", "Fuzzy", "Fuzzy-PID", "Ajuste Fuzzy" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbPort, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbController, 0, 179, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConnect, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(lblConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConnect)
                    .addComponent(cbPort, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbController, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblConnect))
                .addGap(43, 43, 43))
        );

        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        jtDados.setFont(new java.awt.Font("Cordia New", 0, 24)); // NOI18N
        jtDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MILLIS", "ERRO", "Kp", "Kd", "Ki"
            }
        ));
        jtDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDadosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtDadosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtDados);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPortActionPerformed

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        // TODO add your handling code here:
        tabela = cbController.getSelectedItem().toString();
        switch (tabela) {
            case "PID":
                tabela = "pid";
                break;
            case "Fuzzy":
                tabela = "fuzzy";
                break;
            case "Fuzzy-PID":
                tabela = "fuzzypid";
                break;
            case "Ajuste Fuzzy":
                tabela = "ajustefuzzy";
                break;
            default:
                break;
        }
        if(btnConnect.getText().equals("Conectar"))
        { 
            
            if(!cbPort.getSelectedItem().toString().isEmpty())
            {
                
                //porta = SerialPort.getCommPort(cbPort.getSelectedItem().toString());
                kafer = new Arduino(cbPort.getSelectedItem().toString(), 9600);
                //kafer.setPortDescription(cbPort.getSelectedItem().toString());
                
                if(kafer.openConnection())
                {
                    cbPort.setEnabled(false);
                    cbController.setEnabled(false);
                    lblConnect.setVisible(true);
                    btnConnect.setText("Desconectar");
                    cbPort.setEnabled(false);
                    DadosDAO d = new DadosDAO();
                    d.del();
                    new Thread(t1).start();
                    
                    
                }
            } else{
                System.err.println("erro");
            }           
         }else{           
            kafer.closeConnection();
            cbPort.setEnabled(true);
            cbController.setEnabled(true);
            btnConnect.setText("Conectar");
            lblConnect.setVisible(false);
            carregarPortas();
            //readJTable();
        }
        
    }//GEN-LAST:event_btnConnectActionPerformed

    private void cbPortMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbPortMouseClicked
        // TODO add your handling code here:
        carregarPortas();
        
    }//GEN-LAST:event_cbPortMouseClicked

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        

        
    }//GEN-LAST:event_formMouseEntered

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowActivated

    private void jtDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDadosMouseClicked
        // TODO add your handling code here:
        if(evt.getButton() == MouseEvent.BUTTON3){
            System.out.println("botão");
        }
        System.out.println("botão");
        
    }//GEN-LAST:event_jtDadosMouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        if(evt.getButton() == MouseEvent.BUTTON3){
            System.out.println("botão");
        }
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        if(evt.getButton() == MouseEvent.BUTTON3){
            System.out.println("botão");
        }
    }//GEN-LAST:event_jPanel2MousePressed

    private void jtDadosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDadosMousePressed
        if(evt.getButton() == MouseEvent.BUTTON3){
            System.out.println("botão");
        }
    }//GEN-LAST:event_jtDadosMousePressed

     public void carregarPortas(){
         SerialPort[] portNames = SerialPort.getCommPorts();
         cbPort.removeAllItems();
         for(SerialPort portName:portNames){
            cbPort.addItem(portName.getSystemPortName());
         }
           
     }
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaKafer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>
        
       
        //readJTable();
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TelaKafer().setVisible(true);
        });
        
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    public javax.swing.JComboBox<String> cbController;
    private javax.swing.JComboBox<String> cbPort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtDados;
    private javax.swing.JLabel lblConnect;
    // End of variables declaration//GEN-END:variables
}
